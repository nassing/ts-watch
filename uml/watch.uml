@startuml
interface Time {
  +number hours
  +number minutes
  +number seconds
}

class WatchModel {
  -Time time
  -WatchMode mode
  -boolean isListeningToClicks
  -number clickCount

  +number getHours()
  +number getMinutes()
  +number getSeconds()
  +LightMode getLightMode()
  +void setHours(number hours)
  +void setMinutes(number minutes)
  +void setSeconds(number seconds)
  +void setLightMode(LightMode mode)
  +WatchMode getMode()
  +boolean getIsListeningToClicks()
  +number getClickCount()
  +void setMode(WatchMode mode)
  +void setIsListeningToClicks(boolean isListeningToClicks)
  +void setClickCount(number clickCount)
}

class WatchView {
  -HTMLElement watchDisplay
  -HTMLElement buttons

  +WatchMode getWatchMode()
  +(WatchMode | undefined) getTempWatchMode()
  +LightMode getLightMode()
  +Time getTime()
  +void onLightModeButtonClick()
  +void onIncreaseButtonClick()
  +void onSwitchModeButtonClick()
  +void onDeleteWatchButtonClick()

  +void render()
}

class WatchController {
  +void incrementTime()
  +void (WatchMode | undefined) getTempWatchMode()
  +void increaseHours()
  +void increaseMinutes()
  +void handleLightModeButton()
  +void handleIncreaseButton()
  +void handleModeButton()
  +void handleModeButtonTimeout()
}

class Watch {
  -number watchNumber

  +void setWatchNumber(number watchNumber)
  +number getWatchNumber()
  +void removeWatch()
}

class WatchWallController {
  +void onIncreaseTimezoneButtonClick()
  +void onDecreaseTimezoneButtonClick()
  +void createWatch()
  +void removeWatch(Watch watch)
  +Watch[] getWatches()
  +number getTimezone()
}

class WatchWallModel {
  -Watch[] watches
  -number timezone

  +number getTimezone()
  +void setTimezone(number timezone)
  +void createWatch(Watch watch)
  +void removeWatch(Watch watch)
  +Watch[] getWatches()
}

class WatchWallView {
  +number getTimezone()
  +void onIncreaseTimezoneButtonClick()
  +void onDecreaseTimezoneButtonClick()
  +void onCreateClockClick()
  +void initNewWatch(watchNumber: number)
  +void initRender()
  +void renderGMT()
}


WatchController --> WatchModel
WatchController --> WatchView

WatchModel --> Time

WatchWallController --> WatchWallModel
WatchWallController --> WatchWallView
WatchWallModel -->"*" Watch

Watch --> WatchController
@enduml